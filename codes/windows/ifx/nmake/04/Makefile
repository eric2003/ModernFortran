# Compiler
FC = ifx

# Compiler flags
FFLAGS = /O2 /warn:all /standard-semantics

# Linker flags
LDFLAGS = $(FFLAGS)

# Output executable name
TARGET = main.exe

# Source directory
SRCDIR = .

# Object directory
OBJDIR = obj

# List of source files
SOURCES = $(SRCDIR)\main.f90 $(SRCDIR)\onemod.f90 $(SRCDIR)\twomods.f90

# Object files
OBJECTS = $(OBJDIR)\main.obj $(OBJDIR)\onemod.obj $(OBJDIR)\twomods.obj

# Module files generated by compilation
MODULES = $(OBJDIR)\mod1.mod $(OBJDIR)\mod2.mod $(OBJDIR)\mod3.mod

# Default target
all: $(OBJDIR) $(TARGET)

# Create OBJDIR if it doesn't exist
$(OBJDIR):
	@if not exist $(OBJDIR)\nul mkdir $(OBJDIR)

# Link object files to create executable
$(TARGET): $(OBJECTS)
	$(FC) $(LDFLAGS) /exe:$(TARGET) $(OBJECTS)

# Compile main.f90 (depends on module files)
$(OBJDIR)\main.obj: $(SRCDIR)\main.f90 $(MODULES)
	$(FC) $(FFLAGS) /c $(SRCDIR)\main.f90 /object:$@ /module:$(OBJDIR)

# Compile onemod.f90 (produces mod3.mod)
$(OBJDIR)\onemod.obj: $(SRCDIR)\onemod.f90
	$(FC) $(FFLAGS) /c $(SRCDIR)\onemod.f90 /object:$@ /module:$(OBJDIR)

# Compile twomods.f90 (produces mod1.mod and mod2.mod)
$(OBJDIR)\twomods.obj: $(SRCDIR)\twomods.f90
	$(FC) $(FFLAGS) /c $(SRCDIR)\twomods.f90 /object:$@ /module:$(OBJDIR)

# Module files depend on their source files
$(OBJDIR)\mod3.mod: $(OBJDIR)\onemod.obj
$(OBJDIR)\mod1.mod: $(OBJDIR)\twomods.obj
$(OBJDIR)\mod2.mod: $(OBJDIR)\twomods.obj

# Clean up generated files
clean:
	@if exist $(OBJDIR) rmdir /S /Q $(OBJDIR)
	@if exist *.exe del /Q *.exe
	@if exist *.mod del /Q *.mod
	@if exist *_genmod.f90 del /Q *_genmod.f90